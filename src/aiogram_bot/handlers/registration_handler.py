from aiogram import F, Router
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
import re

from keyboards import user_reply_markup
from state.user_state import RegisterState

from loader import db, method_taxi_bot
from logger import logger

router = Router()

@router.message(F.text == "üîê –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
async def register(message: Message, state: FSMContext):
    await state.set_state(RegisterState.fio)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –§–ò–û –≤ —Ñ–æ—Ä–º–∞—Ç–µ - –ü—É–ø–∫–∏–Ω –í–∞—Å–∏–ª–∏–π –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–≤–µ–¥–∏—Ç–µ –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ!",
                         reply_markup=user_reply_markup.back_kb)


@router.message(F.text.lower() == "üîô –Ω–∞–∑–∞–¥")
async def register(message: Message, state: FSMContext):
    await state.clear()
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=user_reply_markup.start_kb)


@router.message(RegisterState.fio)
async def fio(message: Message, state: FSMContext):
    # –£–¥–∞–ª—è–µ–º –∫–∞–≤—ã—á–∫–∏ –∏–∑ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
    db.create_table_drivers()
    fio_text = re.sub(r'[\'‚Äò‚Äô"]', '', message.text)
    await state.update_data(fio=fio_text)
    fio_data = await state.get_data()
    fio_data = fio_data.get("fio")
    
    username = message.from_user.username
    id = message.from_user.id
    
    await state.clear()
    
    check_registration_user = db.get_driver_profile(fio_data)
    if check_registration_user:
        await message.answer("–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ!", reply_markup=user_reply_markup.start_kb)
    else:
        link_driver = method_taxi_bot.get_links_drivers()
        link = link_driver.get(fio_data)
        if link != None:
            db.add_driver_to_database(fio=fio_data, username=username, id=id, link=link)
            logger.info(f"–ë–æ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {fio_data, username, id, link}")
            await message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é! –ñ–µ–ª–∞–µ–º –≤–∞–º –ø–æ–±–æ–ª—å—à–µ –¥–µ–Ω–µ–≥ –Ω–∞ –ª–∏–Ω–∏–∏ –∏ –Ω–∞–¥–µ–µ–º—Å—è, —á—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è —Ä–∞–±–æ—Ç–∞ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞.",
                                reply_markup=user_reply_markup.start_kb)
        else:
            await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –§–ò–û –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Ç–∞–∫—Å–æ–ø–∞—Ä–∫–∞!", reply_markup=user_reply_markup.start_kb)
